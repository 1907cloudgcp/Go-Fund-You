pipeline {
    agent any
    environment {
            PROJECT_ID = 'project-2-251819'
            CREDENTIALS_ID = credentials('credentialsId')
            CERTIFICATE = credentials('cacertificate')
            SERVER_URL = credentials('serverUrl')
            DATABASE_NAME = credentials('database-name')
            JDBC_SCHEMA = credentials('jdbc-schema')
            JDBC_URL = credentials('jdbc-url')
            JDBC_USERNAME = credentials('jdbc-username')
            JDBC_PASSWORD = credentials('jdbc-password')
    }
    stages {
        stage('Maven Build') {
            steps {
                echo 'Maven Build'
                sh 'mvn install'
            }
        }
        stage('Build Image') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'gcr-credentials-file', variable: 'GC_KEY')]) {
                        sh('gcloud auth activate-service-account --key-file=${GC_KEY}')
                        echo 'Docker Build Image'
                        sh('docker build -t gcr.io/${PROJECT_ID}/go-fund-you:productionlatest -f ./devops/Dockerfile --build-arg DATABASE_NAME=${DATABASE_NAME} --build-arg JDBC_SCHEMA=${JDBC_SCHEMA} --build-arg JDBC_URL=${JDBC_URL} --build-arg JDBC_USERNAME=${JDBC_USERNAME} --build-arg JDBC_PASSWORD=${JDBC_PASSWORD} .')
                        echo 'Docker Push Image'
                        sh('gcloud docker -- push gcr.io/${PROJECT_ID}/go-fund-you:productionlatest')
                    }
                }
            }
        }
        stage('Deploy') {
            environment {
                GKE_KEY = credentials('gke-credentials')
            }
            steps {
                /*
                echo 'Deploying to Kubernetes'
                sh('kubectl set image deployments/gfy-deployment go-fund-you=gcr.io/${PROJECT_ID}/go-fund-you:productionlatest')
                */
                withCredentials([file(credentialsId: 'gcr-credentials-file', variable: 'GC_KEY')]) {
                    sh('gcloud auth activate-service-account --key-file=${GC_KEY}')
                    echo 'Deploying to Kubernetes'
                    sh('gcloud container clusters get-credentials')
                    sh('kubectl set image deployments/gfy-deployment go-fund-you=gcr.io/${PROJECT_ID}/go-fund-you:productionlatest')
                    /*withKubeConfig([credentialsId: 'credentialsId',
                                    contextName: 'gke_project-2-251819_us-central1-a_jenkins-cd',
                                    serverUrl: '34.66.114.30',
                                    clusterName: 'jenkins-cd',
                                    namespace: 'default',
                                    caCertificate: '${CERTIFICATE}']) {
                        sh('kubectl set image deployments/gfy-deployment go-fund-you=gcr.io/${PROJECT_ID}/go-fund-you:productionlatest')
                    }*/
                }
                /*
                withCredentials([[$class: 'FileBinding', credentialsId: "gke-credentials", variable: 'GKE_KEY']]) {
                    kubernetesEngineDeploy(projectId:env.PROJECT_ID,
                                           clusterName:env.CLUSTER_NAME,
                                           location:env.LOCATION,
                                           manifestPattern:'manifest.yaml',
                                           credentialsId:'$GKE_KEY',
                                           verifyDeployments:true)
                }
                */
            }
        }
    }
}
